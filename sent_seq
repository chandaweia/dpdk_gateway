redirect.c:	tcp_send->src_port = tcphdr->dst_port; 
redirect.c:	tcp_send->dst_port = tcphdr->src_port;
redirect.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c:	tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c:	tcp_send->tcp_flags |= TCP_SYN_FLAG;//syn=1
redirect.c:	tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:	tcp_send->tcp_urp = 0;
redirect.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c:		tcp_send->data_off =0x80;  //not add option
redirect.c:		//tcp_send->data_off = tcphdr->data_off;  //add option
redirect.c:		tcp_send->cksum = 0;
redirect.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:		printf("tcp_send--------\n");showtcp(tcp_send);*/
redirect.c:        	//tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+sizeof(TCP_OPT));
redirect.c:		tcp_send->data_off = 0x80;
redirect.c:		tcp_send->cksum = 0;
redirect.c:		tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:		//printf("tcp_send--------\n");showtcp(tcp_send);
redirect.c:	tcp_send->src_port = tcphdr->dst_port;
redirect.c:    tcp_send->dst_port = tcphdr->src_port;
redirect.c:    tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c:	//tcp_send->data_off = tcphdr->data_off;  //add option
redirect.c:    tcp_send->data_off = 0x50;  //not add option
redirect.c:    tcp_send->tcp_flags &= ~TCP_SYN_FLAG;//syn=0
redirect.c:    tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c:	tcp_send->tcp_urp = 0;
redirect.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirect.c:		tcp_send->cksum = 0;
redirect.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:                tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+redirect_buff_len);*/
redirect.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirect.c:		tcp_send->cksum = 0;
redirect.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send); 
redirect.c:	tcp_send->tcp_flags |= TCP_FIN_FLAG;//syn=1
redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:		tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:		tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:	tcp_send->src_port = tcphdr->dst_port;
redirect.c:        tcp_send->dst_port = tcphdr->src_port;
redirect.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);//原tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq);
redirect.c:        tcp_send->data_off = 0x50;
redirect.c:        //tcp_send->tcp_flags |= TCP_FIN_FLAG; //fin=1
redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:		tcp_send->tcp_urp = 0;
redirect.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c:		//printf("tcp_send->sent_seq:%x,tcp_send->recv_ack:%x\n",conn_item->last_send_seq,conn_item->last_recv_seq+1);
redirect.c:		tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:				tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:		        //printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
redirect.c:	tcp_send->src_port = tcphdr->dst_port;
redirect.c:        tcp_send->dst_port = tcphdr->src_port;
redirect.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c:        tcp_send->data_off = 0x50;
redirect.c:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//fin=0
redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:		tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:				tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
redirect.c:		tcp_send->src_port = tcphdr->dst_port;
redirect.c:        tcp_send->dst_port = tcphdr->src_port;
redirect.c:        //tcp_send->sent_seq = rte_cpu_to_be_32(tcphdr->sent_seq);
redirect.c:        //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->recv_ack+1);
redirect.c:		tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c:        tcp_send->data_off = 0x50;
redirect.c:        tcp_send->tcp_flags &= ~TCP_RST_FLAG;//rst=0
redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c:		tcp_send->tcp_urp = 0;
redirect.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c:				tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:				tcp_send->cksum = 0;
redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
redirect.c:	tcp_send->src_port = tcphdr->dst_port;
redirect.c:    tcp_send->dst_port = tcphdr->src_port;
redirect.c:    //tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirect.c:    //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->sent_seq+1);//不需要吧?
redirect.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirect.c:	tcp_send->recv_ack = rte_cpu_to_be_32(0);
redirect.c:	tcp_send->tcp_flags |= TCP_RST_FLAG;//rst=1
redirect.c:	tcp_send->tcp_flags &= ~TCP_ACK_FLAG;//ack=1
redirect.c:    tcp_send->tcp_urp = 0;
redirect.c:    tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c:		tcp_send->data_off =0x50;  //not add option
redirect.c:		tcp_send->cksum = 0;
redirect.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c:		tcp_send->data_off = 0x50;
redirect.c:		tcp_send->cksum = 0;
redirect.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c:		printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
redirect.c.old:	tcp_send->src_port = tcphdr->dst_port; 
redirect.c.old:	tcp_send->dst_port = tcphdr->src_port;
redirect.c.old:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c.old:	tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c.old:	tcp_send->data_off =0x50;  //not add option
redirect.c.old:	//tcp_send->data_off = tcphdr->data_off;  //add option
redirect.c.old:	tcp_send->tcp_flags |= TCP_SYN_FLAG;//syn=1
redirect.c.old:	tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:	tcp_send->tcp_urp = 0;
redirect.c.old:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:        	//tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+sizeof(TCP_OPT));
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:		tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c.old:	tcp_send->src_port = tcphdr->dst_port;
redirect.c.old:        tcp_send->dst_port = tcphdr->src_port;
redirect.c.old:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c.old:	//tcp_send->data_off = tcphdr->data_off;  //add option
redirect.c.old:        tcp_send->data_off = 0x50;  //not add option
redirect.c.old:        tcp_send->tcp_flags &= ~TCP_SYN_FLAG;//syn=0
redirect.c.old:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c.old:	tcp_send->tcp_urp = 0;
redirect.c.old:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:                tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+redirect_buff_len);*/
redirect.c.old:                tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send); 
redirect.c.old:	tcp_send->tcp_flags |= TCP_FIN_FLAG;//syn=1
redirect.c.old:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c.old:	tcp_send->src_port = tcphdr->dst_port;
redirect.c.old:        tcp_send->dst_port = tcphdr->src_port;
redirect.c.old:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c.old:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c.old:        tcp_send->data_off = 0x50;
redirect.c.old:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//syn=0
redirect.c.old:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:	//tcp_send->tcp_urp = 0;
redirect.c.old:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c.old:	tcp_send->src_port = tcphdr->dst_port;
redirect.c.old:        tcp_send->dst_port = tcphdr->src_port;
redirect.c.old:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirect.c.old:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirect.c.old:        tcp_send->data_off = 0x50;
redirect.c.old:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//fin=0
redirect.c.old:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirect.c.old:	tcp_send->src_port = tcphdr->dst_port;
redirect.c.old:        tcp_send->dst_port = tcphdr->src_port;
redirect.c.old:        tcp_send->sent_seq = rte_be_to_cpu_32(tcphdr->sent_seq);
redirect.c.old:        tcp_send->recv_ack = rte_be_to_cpu_32(tcphdr->recv_ack+1);
redirect.c.old:        tcp_send->data_off = 0x50;
redirect.c.old:        tcp_send->tcp_flags &= ~TCP_RST_FLAG;//rst=0
redirect.c.old:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirect.c.old:	tcp_send->tcp_urp = 0;
redirect.c.old:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirect.c.old:		tcp_send->cksum = 0;
redirect.c.old:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
rdct/skeleton/redirect.c:	tcp_send->src_port = tcphdr->dst_port; 
rdct/skeleton/redirect.c:	tcp_send->dst_port = tcphdr->src_port;
rdct/skeleton/redirect.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
rdct/skeleton/redirect.c:	tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
rdct/skeleton/redirect.c:	tcp_send->data_off =0x50;  //not add option
rdct/skeleton/redirect.c:	//tcp_send->data_off = tcphdr->data_off;  //add option
rdct/skeleton/redirect.c:	tcp_send->tcp_flags |= TCP_SYN_FLAG;//syn=1
rdct/skeleton/redirect.c:	tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:	tcp_send->tcp_urp = 0;
rdct/skeleton/redirect.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:        	//tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+sizeof(TCP_OPT));
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:		tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
rdct/skeleton/redirect.c:	tcp_send->src_port = tcphdr->dst_port;
rdct/skeleton/redirect.c:        tcp_send->dst_port = tcphdr->src_port;
rdct/skeleton/redirect.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
rdct/skeleton/redirect.c:	//tcp_send->data_off = tcphdr->data_off;  //add option
rdct/skeleton/redirect.c:        tcp_send->data_off = 0x50;  //not add option
rdct/skeleton/redirect.c:        tcp_send->tcp_flags &= ~TCP_SYN_FLAG;//syn=0
rdct/skeleton/redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
rdct/skeleton/redirect.c:	tcp_send->tcp_urp = 0;
rdct/skeleton/redirect.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:                tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+redirect_buff_len);*/
rdct/skeleton/redirect.c:                tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send); 
rdct/skeleton/redirect.c:	tcp_send->tcp_flags |= TCP_FIN_FLAG;//syn=1
rdct/skeleton/redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
rdct/skeleton/redirect.c:	tcp_send->src_port = tcphdr->dst_port;
rdct/skeleton/redirect.c:        tcp_send->dst_port = tcphdr->src_port;
rdct/skeleton/redirect.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
rdct/skeleton/redirect.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
rdct/skeleton/redirect.c:        tcp_send->data_off = 0x50;
rdct/skeleton/redirect.c:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//syn=0
rdct/skeleton/redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:	//tcp_send->tcp_urp = 0;
rdct/skeleton/redirect.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
rdct/skeleton/redirect.c:	tcp_send->src_port = tcphdr->dst_port;
rdct/skeleton/redirect.c:        tcp_send->dst_port = tcphdr->src_port;
rdct/skeleton/redirect.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
rdct/skeleton/redirect.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
rdct/skeleton/redirect.c:        tcp_send->data_off = 0x50;
rdct/skeleton/redirect.c:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//fin=0
rdct/skeleton/redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
rdct/skeleton/redirect.c:	tcp_send->src_port = tcphdr->dst_port;
rdct/skeleton/redirect.c:        tcp_send->dst_port = tcphdr->src_port;
rdct/skeleton/redirect.c:        tcp_send->sent_seq = rte_be_to_cpu_32(tcphdr->sent_seq);
rdct/skeleton/redirect.c:        tcp_send->recv_ack = rte_be_to_cpu_32(tcphdr->recv_ack+1);
rdct/skeleton/redirect.c:        tcp_send->data_off = 0x50;
rdct/skeleton/redirect.c:        tcp_send->tcp_flags &= ~TCP_RST_FLAG;//rst=0
rdct/skeleton/redirect.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
rdct/skeleton/redirect.c:	tcp_send->tcp_urp = 0;
rdct/skeleton/redirect.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
rdct/skeleton/redirect.c:		tcp_send->cksum = 0;
rdct/skeleton/redirect.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:	tcp_send->src_port = tcphdr->dst_port; 
redirectold1.c:	tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold1.c:	tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold1.c:	tcp_send->tcp_flags |= TCP_SYN_FLAG;//syn=1
redirectold1.c:	tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:	tcp_send->tcp_urp = 0;
redirectold1.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold1.c:		tcp_send->data_off =0x80;  //not add option
redirectold1.c:		//tcp_send->data_off = tcphdr->data_off;  //add option
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:		printf("tcp_send--------\n");showtcp(tcp_send);*/
redirectold1.c:        	//tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+sizeof(TCP_OPT));
redirectold1.c:		tcp_send->data_off = 0x80;
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:		tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:		//printf("tcp_send--------\n");showtcp(tcp_send);
redirectold1.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold1.c:    tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:    tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold1.c:	//tcp_send->data_off = tcphdr->data_off;  //add option
redirectold1.c:    tcp_send->data_off = 0x50;  //not add option
redirectold1.c:    tcp_send->tcp_flags &= ~TCP_SYN_FLAG;//syn=0
redirectold1.c:    tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold1.c:	tcp_send->tcp_urp = 0;
redirectold1.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:                tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+redirect_buff_len);*/
redirectold1.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send); 
redirectold1.c:	tcp_send->tcp_flags |= TCP_FIN_FLAG;//syn=1
redirectold1.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold1.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold1.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq);
redirectold1.c:        tcp_send->data_off = 0x50;
redirectold1.c:        tcp_send->tcp_flags |= TCP_FIN_FLAG; //fin=1
redirectold1.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:		tcp_send->tcp_urp = 0;
redirectold1.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:				tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:		        //printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
redirectold1.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold1.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold1.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold1.c:        tcp_send->data_off = 0x50;
redirectold1.c:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//fin=0
redirectold1.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:				tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
redirectold1.c:		tcp_send->src_port = tcphdr->dst_port;
redirectold1.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:        //tcp_send->sent_seq = rte_cpu_to_be_32(tcphdr->sent_seq);
redirectold1.c:        //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->recv_ack+1);
redirectold1.c:		tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold1.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold1.c:        tcp_send->data_off = 0x50;
redirectold1.c:        tcp_send->tcp_flags &= ~TCP_RST_FLAG;//rst=0
redirectold1.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold1.c:		tcp_send->tcp_urp = 0;
redirectold1.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold1.c:				tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:				tcp_send->cksum = 0;
redirectold1.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
redirectold1.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold1.c:    tcp_send->dst_port = tcphdr->src_port;
redirectold1.c:    //tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirectold1.c:    //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->sent_seq+1);//不需要吧?
redirectold1.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirectold1.c:	tcp_send->recv_ack = rte_cpu_to_be_32(0);
redirectold1.c:	tcp_send->tcp_flags |= TCP_RST_FLAG;//rst=1
redirectold1.c:	tcp_send->tcp_flags &= ~TCP_ACK_FLAG;//ack=1
redirectold1.c:    tcp_send->tcp_urp = 0;
redirectold1.c:    tcp_send->rx_win=rte_cpu_to_be_16(0);
redirectold1.c:		tcp_send->data_off =0x50;  //not add option
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold1.c:		tcp_send->data_off = 0x50;
redirectold1.c:		tcp_send->cksum = 0;
redirectold1.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold1.c:		printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));*/
Binary file build/redirect.o matches
redirectold.c:	tcp_send->src_port = tcphdr->dst_port; 
redirectold.c:	tcp_send->dst_port = tcphdr->src_port;
redirectold.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold.c:	tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold.c:	tcp_send->tcp_flags |= TCP_SYN_FLAG;//syn=1
redirectold.c:	tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:	tcp_send->tcp_urp = 0;
redirectold.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold.c:		tcp_send->data_off =0x50;  //not add option
redirectold.c:		//tcp_send->data_off = tcphdr->data_off;  //add option
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:        	//tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+sizeof(TCP_OPT));
redirectold.c:		tcp_send->data_off = 0x50;
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:		tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold.c:    tcp_send->dst_port = tcphdr->src_port;
redirectold.c:    tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold.c:	//tcp_send->data_off = tcphdr->data_off;  //add option
redirectold.c:    tcp_send->data_off = 0x50;  //not add option
redirectold.c:    tcp_send->tcp_flags &= ~TCP_SYN_FLAG;//syn=0
redirectold.c:    tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:	tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold.c:	tcp_send->tcp_urp = 0;
redirectold.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:                tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = checksum(check_Buff,sizeof(PSD_HEADER)+sizeof(struct tcp_hdr)+redirect_buff_len);*/
redirectold.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+len);
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send); 
redirectold.c:	tcp_send->tcp_flags |= TCP_FIN_FLAG;//syn=1
redirectold.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq);
redirectold.c:        tcp_send->data_off = 0x50;
redirectold.c:        tcp_send->tcp_flags |= TCP_FIN_FLAG; //fin=1
redirectold.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:		tcp_send->tcp_urp = 0;
redirectold.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:				tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
redirectold.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold.c:        tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold.c:        tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold.c:        tcp_send->data_off = 0x50;
redirectold.c:        tcp_send->tcp_flags &= ~TCP_FIN_FLAG;//fin=0
redirectold.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:				tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
redirectold.c:		tcp_send->src_port = tcphdr->dst_port;
redirectold.c:        tcp_send->dst_port = tcphdr->src_port;
redirectold.c:        //tcp_send->sent_seq = rte_cpu_to_be_32(tcphdr->sent_seq);
redirectold.c:        //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->recv_ack+1);
redirectold.c:		tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_send_seq);
redirectold.c:		tcp_send->recv_ack = rte_cpu_to_be_32(conn_item->last_recv_seq+1);
redirectold.c:        tcp_send->data_off = 0x50;
redirectold.c:        tcp_send->tcp_flags &= ~TCP_RST_FLAG;//rst=0
redirectold.c:        tcp_send->tcp_flags |= TCP_ACK_FLAG; //ack=1
redirectold.c:		tcp_send->tcp_urp = 0;
redirectold.c:        tcp_send->rx_win=rte_cpu_to_be_16(65535);
redirectold.c:				tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:				tcp_send->cksum = 0;
redirectold.c:                tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:		        printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
redirectold.c:	tcp_send->src_port = tcphdr->dst_port;
redirectold.c:    tcp_send->dst_port = tcphdr->src_port;
redirectold.c:    //tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirectold.c:    //tcp_send->recv_ack = rte_cpu_to_be_32(tcphdr->sent_seq+1);//不需要吧?
redirectold.c:	tcp_send->sent_seq = rte_cpu_to_be_32(conn_item->last_recv_ack_seq);
redirectold.c:	tcp_send->recv_ack = rte_cpu_to_be_32(0);
redirectold.c:	tcp_send->tcp_flags |= TCP_RST_FLAG;//rst=1
redirectold.c:	tcp_send->tcp_flags &= ~TCP_ACK_FLAG;//ack=1
redirectold.c:    tcp_send->tcp_urp = 0;
redirectold.c:    tcp_send->rx_win=rte_cpu_to_be_16(0);
redirectold.c:		tcp_send->data_off =0x50;  //not add option
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:        tcp_send->cksum = rte_ipv4_udptcp_cksum(ip_send,tcp_send);
redirectold.c:		tcp_send->data_off = 0x50;
redirectold.c:		tcp_send->cksum = 0;
redirectold.c:        tcp_send->cksum = rte_ipv6_udptcp_cksum(ip6_send,tcp_send);
redirectold.c:		printf("src port:%d, dst port:%d\n",rte_cpu_to_be_32(tcp_send->src_port),rte_cpu_to_be_32(tcp_send->dst_port));
